//////////////////////////
=== Installing Git
//////////////////////////
=== Git 설치

//////////////////////////
Before you start using Git, you have to make it available on your computer.
Even if it's already installed, it's probably a good idea to update to the latest version.
You can either install it as a package or via another installer, or download the source code and compile it yourself.
//////////////////////////
Git을 사용하려면 우선 설치해야 한다.
이미 설치했으면 최신 버전으로 업데이트하는 게 좋다.
패키지를 설치하거나 별도의 인스톨러로 설치할 수 있다. 아니면 직접 소스코드를 내려받아서 컴파일할 수도 있다.

[NOTE]
//////////////////////////
====
This book was written using Git version *2.0.0*.
Though most of the commands we use should work even in ancient versions of Git, some of them might not or might act slightly differently if you're using an older version.
Since Git is quite excellent at preserving backwards compatibility, any version after 2.0 should work just fine.
====
//////////////////////////
====
이 책은 Git *2.0.0* 버전을 기준으로 썼다.
대부분의 명령어는 그 이전 버전에서도 잘 동작하지만, 몇 가지 기능은 아예 없거나 미묘하게 다를 수 있다.
Git의 하위 호환성은 정말 훌륭하기 때문에 2.0 이후 버전에서는 잘 동작한다.
====

//////////////////////////
==== Installing on Linux
//////////////////////////
==== Linux에 설치

(((Linux, installing)))
//////////////////////////
If you want to install the basic Git tools on Linux via a binary installer, you can generally do so through the package management tool that comes with your distribution.
If you're on Fedora (or any closely-related RPM-based distribution, such as RHEL or CentOS), you can use `dnf`:
//////////////////////////
Linux에서 패키지로 Git을 설치할 때는 보통 각 배포판에서 사용하는 패키지 관리도구를 사용하여 설치한다.
Fedora(또는 비슷하게 RPM 기반 패키지 시스템을 사용하는 RHEL, CentOS)에서는 아래와 같이 `dnf`를 사용 한다.

[source,console]
----
$ sudo dnf install git-all
----

//////////////////////////
If you're on a Debian-based distribution, such as Ubuntu, try `apt`:
//////////////////////////
Ubuntu등의 데비안 계열 배포판에서는 `apt`를 사용한다.

[source,console]
----
$ sudo apt install git-all
----

//////////////////////////
For more options, there are instructions for installing on several different Unix distributions on the Git website, at http://git-scm.com/download/linux[].
//////////////////////////
다른 Unix 배포판에 설치하려면 http://git-scm.com/download/linux[] 에서 확인하라.

//////////////////////////
==== Installing on Mac
//////////////////////////
==== Mac에 설치

(((Mac, installing)))
//////////////////////////
There are several ways to install Git on a Mac.
The easiest is probably to install the Xcode Command Line Tools.(((Xcode)))
On Mavericks (10.9) or above you can do this simply by trying to run 'git' from the Terminal the very first time.
If you don't have it installed already, it will prompt you to install it.
//////////////////////////
Mac에 Git을 설치하는 방법 중에는 Xcode Command Line Tools를 설치하는 방법이 가장 쉽다.(((Xcode)))
Mavericks(10.9)부터는 Terminal에 단지 처음으로 'git'을 실행하는 것으로 설치가 시작된다.
'git'이 설치돼 있지 않으면 설치하라고 안내해준다.

[source,console]
----
$ git --version
----

//////////////////////////
If you don't have it installed already, it will prompt you to install it.
//////////////////////////
만약 Git이 시스템에 설치되어있지 않은 경우, 설치할 수 있도록 안내 메시지가 뜰 것이다.

//////////////////////////
If you want a more up to date version, you can also install it via a binary installer.
A macOS Git installer is maintained and available for download at the Git website, at http://git-scm.com/download/mac[].
//////////////////////////
좀 더 최신 버전이 필요하면 바이너리 인스톨러로 설치할 수 있다.
macOS용 Git 인스톨러는 Git 웹사이트에서 관리하고 있으며 http://git-scm.com/download/mac[] 에서 내려받는다.

//////////////////////////
.Git macOS Installer.
image::images/git-osx-installer.png[Git macOS installer.]
//////////////////////////
.Git macOS 인스톨러.
image::images/git-osx-installer.png[Git macOS installer.]

//////////////////////////
You can also install it as part of the GitHub for Mac install.
Their GUI Git tool has an option to install command line tools as well.
You can download that tool from the GitHub for Mac website, at http://mac.github.com[].
//////////////////////////
'GitHub for Mac'을 설치하는 방법도 있다.
이 도구에도 CLI 도구를 설치하는 옵션이 있다.
'GitHub for Mac'은 http://mac.github.com[]에서 내려받는다.

//////////////////////////
==== Installing on Windows
//////////////////////////
==== Windows에 설치

//////////////////////////
There are also a few ways to install Git on Windows.(((Windows, installing)))
The most official build is available for download on the Git website.
Just go to http://git-scm.com/download/win[] and the download will start automatically.
Note that this is a project called Git for Windows, which is separate from Git itself; for more information on it, go to https://git-for-windows.github.io/[].
//////////////////////////
Windows에 Git을 설치하는 방법은 여러 가지다.(((Windows, installing)))
공식 배포판은 Git 웹사이트에서 내려받을 수 있다.
http://git-scm.com/download/win[]에 가면 자동으로 다운로드가 시작된다.
이 프로젝트가 'Git for Windows'인데, Git 자체와는 다른 별도의 프로젝트다. 자세한 정보는 https://git-for-windows.github.io/[]에서 확인한다.

//////////////////////////
To get an automated installation you can use the https://chocolatey.org/packages/git[Git Chocolatey package].
Note that the Chocolatey package is community maintained.
//////////////////////////
자동화된 설치 방식은 https://chocolatey.org/packages/git[Git Chocolatey 패키지]를 통해 이용해볼 수 있다.
패키지는 커뮤니티에 의해 운영되는 프로그램인 점을 알려드린다.

//////////////////////////
Another easy way to get Git installed is by installing GitHub Desktop.
The installer includes a command line version of Git as well as the GUI.
It also works well with Powershell, and sets up solid credential caching and sane CRLF settings.(((Powershell)))(((CRLF)))(((credential caching)))
We'll learn more about those things a little later, but suffice it to say they're things you want.
You can download this from the https://desktop.github.com/[GitHub Desktop website].
//////////////////////////
Windows에서도 Git을 사용하는 또 다른 방법으로 'GitHub Desktop'을 설치하는 방법이 있다. 
이 인스톨러는 CLI와 GUI를 모두 설치해준다.
설치하면 Git을 Powershell에서 사용할 수 있다. 인증정보(Credential) 캐싱과 CRLF 설정까지 잘 된다.(((Powershell)))(((CRLF)))(((credential caching)))
이런 것들은 차차 배우게 될 것인데, Git 사용자라면 쓰게 될 기능들이다.
'GitHub Desktop'은 http://desktop.github.com[GitHub Desktop 웹사이트]에서 내려받는다.

//////////////////////////
==== Installing from Source
//////////////////////////
==== 소스코드로 설치하기

//////////////////////////
Some people may instead find it useful to install Git from source, because you'll get the most recent version.
The binary installers tend to be a bit behind, though as Git has matured in recent years, this has made less of a difference.
//////////////////////////
가장 최신 버전이 필요하면 소스코드로 설치하는 것이 좋다. 바이너리 인스톨러는 약간 늦는다.
최근 Git은 매우 성숙해서 변경이 크지 않지만, 그래도 약간 차이 난다.

//////////////////////////
If you do want to install Git from source, you need to have the following libraries that Git depends on: autotools, curl, zlib, openssl, expat, and libiconv.
For example, if you're on a system that has `dnf` (such as Fedora) or `apt-get` (such as a Debian-based system), you can use one of these commands to install the minimal dependencies for compiling and installing the Git binaries:
//////////////////////////
Git을 설치하려면 Git이 의존하고 있는 라이브러리인 autotools, curl, zlib, openssl, expat, libiconv등이 필요하다.
예를 들어 `dnf`을 사용하는 Fedora등의 시스템이나 `apt-get`이 있는 데비안 계열 시스템이면 아래 명령어 중 하나를 실행하여 필요한 패키지를 설치할 수 있다.

[source,console]
----
$ sudo dnf install dh-autoreconf curl-devel expat-devel gettext-devel \
  openssl-devel perl-devel zlib-devel
$ sudo apt-get install dh-autoreconf libcurl4-gnutls-dev libexpat1-dev \
  gettext libz-dev libssl-dev
----

//////////////////////////
In order to be able to add the documentation in various formats (doc, html, info), these additional dependencies are required:
In order to be able to add the documentation in various formats (doc, html, info), these additional dependencies are required (Note: users of RHEL and RHEL-derivatives like CentOS and Scientific Linux will have to https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F[enable the EPEL repository] to download the `docbook2X` package):
//////////////////////////
문서를 다양한(doc, html, info) 형식으로 추가하려면 다음의 패키지들이 추가로 필요하다(주의: CentOS나 Scientific Linux 같은 RHEL 계열 사용자는 https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F[EPEL 저장소를 켜고] `docbook2X` 패키지를 다운로드해야 한다.)

[source,console]
----
$ sudo dnf install asciidoc xmlto docbook2X
$ sudo apt-get install asciidoc xmlto docbook2x
----

//////////////////////////
If you're using a Debian-based distribution (Debian/Ubuntu/Ubuntu-derivatives), you also need the `install-info` package:
//////////////////////////
데비안 계열 시스템이면 `install-info` 패키지도 설치해야 한다.

[source,console]
----
$ sudo apt-get install install-info
----

//////////////////////////
If you're using a RPM-based distribution (Fedora/RHEL/RHEL-derivatives), you also need the `getopt` package (which is already installed on a Debian-based distro):
//////////////////////////
RPM을 사용하는 Fedora나 비슷한 시스템을 사용한다면 `getopt` 패키지도 설치해야 한다(이는 데비안 계열 시스템에는 이미 설치되어 있다).

[source,console]
----
$ sudo dnf install getopt
$ sudo apt-get install getopt
----

//////////////////////////
Additionally, if you're using Fedora/RHEL/RHEL-derivatives, you need to do this
//////////////////////////
Fedora/RHEL/RHEL 계열 사용자라면 아래 명령도 필요하다.

[source,console]
----
$ sudo ln -s /usr/bin/db2x_docbook2texi /usr/bin/docbook2x-texi
----

//////////////////////////
due to binary name differences.
//////////////////////////
실행파일 이름이 달라서 그렇다.

//////////////////////////
When you have all the necessary dependencies, you can go ahead and grab the latest tagged release tarball from several places.
You can get it via the kernel.org site, at https://www.kernel.org/pub/software/scm/git[], or the mirror on the GitHub website, at https://github.com/git/git/releases[].
It's generally a little clearer what the latest version is on the GitHub page, but the kernel.org page also has release signatures if you want to verify your download.
//////////////////////////
모든 준비가 완료되면, 최신 배포 버전을 가져와야 한다.
Kernel.org(https://www.kernel.org/pub/software/scm/git[])에서 내려받을 수도 있고 GitHub에 있는 미러(https://github.com/git/git/releases[])에서도 받을 수도 있다.
보통 GitHub 페이지에서 최신 버전을 내려받는 것이 더 간단하지만 kernel.org에는 배포 시그너처가 있어서 내려받은 것을 검증할 수 있다.

//////////////////////////
Then, compile and install:
//////////////////////////
이제, 컴파일하고 설치하자.

[source,console]
----
$ tar -zxf git-2.0.0.tar.gz
$ cd git-2.0.0
$ make configure
$ ./configure --prefix=/usr
$ make all doc info
$ sudo make install install-doc install-html install-info
----

//////////////////////////
After this is done, you can also get Git via Git itself for updates:
//////////////////////////
설치하고 나면 Git을 사용하여 Git 소스코드를 받아서 수정할 수도 있다.

[source,console]
----
$ git clone git://git.kernel.org/pub/scm/git/git.git
----
